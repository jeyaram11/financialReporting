{
	"name": "df_Copy_RawToCleansed_Sales_Celesete_ex4",
	"properties": {
		"folder": {
			"name": "04. Exercise"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "abs_csv_raw_celeste_ex3",
						"type": "DatasetReference"
					},
					"name": "SourceCSVCeleste"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "abs_csv_cleansed_celeste_ex3",
						"type": "DatasetReference"
					},
					"name": "sinkCSVCleansedCeleste"
				}
			],
			"transformations": [
				{
					"name": "RemoveZeroValues",
					"flowlet": {
						"referenceName": "fl_RemoveZeroValues",
						"type": "DataFlowReference"
					}
				},
				{
					"name": "filtersummaryLine"
				},
				{
					"name": "AggregateDailySales"
				},
				{
					"name": "AddFileNameColumn"
				}
			],
			"scriptLines": [
				"source(output(",
				"          TransactionId as string,",
				"          TransactionDate as string,",
				"          OnlineRetailer as string,",
				"          SalesMonth as string,",
				"          SalesRegion as string,",
				"          SalesCurrency as string,",
				"          Title as string,",
				"          Vintage as string,",
				"          Variety as string,",
				"          Score as string,",
				"          ListPrice as string,",
				"          Quantity as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SourceCSVCeleste",
				"AggregateDailySales compose(mapColumn(",
				"          OnlineRetailer,",
				"          SalesMonth,",
				"          SalesRegion,",
				"          SalesCurrency,",
				"          Title,",
				"          Vintage,",
				"          Variety,",
				"          Score,",
				"          ListPrice,",
				"          Quantity,",
				"          FileName",
				"     ),",
				"     composition: 'fl_RemoveZeroValues') ~> RemoveZeroValues@(outputCSVCleansedCeleste)",
				"AddFileNameColumn filter(left(TransactionDate,21) != 'Total Sales Quantity:') ~> filtersummaryLine",
				"filtersummaryLine aggregate(groupBy(OnlineRetailer,",
				"          SalesMonth,",
				"          SalesRegion,",
				"          SalesCurrency,",
				"          Title,",
				"          Vintage,",
				"          Variety,",
				"          Score,",
				"          ListPrice,",
				"          FileName),",
				"     Quantity = sum(toInteger(Quantity))) ~> AggregateDailySales",
				"SourceCSVCeleste derive(FileName = concat(OnlineRetailer, '_', substring(SalesMonth, 1, 4), '_',substring(SalesMonth, 6, 2))) ~> AddFileNameColumn",
				"RemoveZeroValues@outputCSVCleansedCeleste sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          OnlineRetailer as string,",
				"          SalesMonth as string,",
				"          Title as string,",
				"          Vintage as string,",
				"          Variety as string,",
				"          Score as string,",
				"          ListPrice as string,",
				"          Quantity as string",
				"     ),",
				"     rowUrlColumn:'FileName',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkCSVCleansedCeleste"
			]
		}
	}
}